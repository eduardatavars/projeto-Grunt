Windows PowerShell 

cd c:/pastadoarquivo

npm i -g grunt-cli

npm init

npm i --save-dev grunt


VSCODE

package-json > "grunt": "grunt",
 
Gruntfile.js 

module.exports = function(grunt) {
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
    })
}

grunt.registerTask('olaGrunt', function() {
        const done = this.async();
        setTimeout(function() {
            console.log('Olá Grunt');
            done();
        }, 3000);
    })

    grunt.registerTask('default', ['olaGrunt']);
}

npm run grunt //sem a const teria que executar com 'npm run grunt olaGrunt'


PLUGIN LESS

npm install --save-dev grunt-contrib-less

grunt.loadNpmTasks('grunt-contrib-less');

less: {
            development: {
                files: {
                    'main.css': 'main.less'
                }
            }
        }

grunt.registerTask('default', ['less']);

npm run grunt

,
            production: {
                options: {
                    compress: true,
                },
                files: {
                    'main.min.css':'main.less'
                }
            }

npm run grunt


PLUGIN SASS

npm install --save-dev grunt-contrib-sass

grunt.loadNpmTasks('grunt-contrib-sass');

,
        sass: {
            dist: {
                files: {
                    'main2.css': 'main.scss'
                }
            }
        }

grunt.registerTask('default', ['less', 'sass']);

npm run grunt

COMPRIMIR ARQUIVO CSS

,
        sass: {
            dist: {
                options: {
                    style: 'compressed'
                },
                files: {
                    'main2.css': 'main.scss'
                }
            }
        }

npm run grunt


PLUGIN CONCURRENT (rodar tarefas paralelas)

npm install --save-dev grunt-concurrent

grunt.loadNpmTasks('grunt-concurrent');

,
        concurrent: {
            target: ['olaGrunt', 'less', 'sass']
        }

grunt.registerTask('default', ['concurrent']);



PROJETO LESS E GRUNT 

package.JSON > "scripts": {
    "grunt": "grunt",
    "build": "grunt build",


Gruntfile.js >

module.exports = function(grunt) {
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
        less: {
            development: {
                files: {
                    'dev/styles/main.css': 'src/styles/main.less'
                }
            },
            production: {
                options: {
                    compress: true
                },
                files: {
                    'dist/styles/main.min.css': 'src/styles/main.less'
                }
            }
        }
    });

    grunt.loadNpmTasks('grunt-contrib-less');

    grunt.registerTask('default', ['less:development']);
    grunt.registerTask('build', ['less:production']);
}



Mudanças no GRUNT (WATCH) PLUGIN

npm install --save-dev grunt-contrib-watch

grunt.loadNpmTasks('grunt-contrib-watch');

},
        watch: {
            less: {
                files: ['src/styles/**/*.less'],
                tasks: ['less:development']
            }
        }

grunt.registerTask('default', ['watch']);

npm run grunt


PLUGIN INDEX - DIS/DEV

npm install --save-dev grunt-replace

grunt.loadNpmTasks('grunt-replace');

,
        replace: {
            dev: {
                options: {
                   patterns: [
                        {
                            match: 'ENDERECO_DO_CSS',
                            replacement: './styles/main.css'
                        }
                   ] 
                },
                files: [
                    {
                        expand: true,
                        flatten: true,
                        src: ['src/index.html'],
                        dest: 'dev/'
                    }
                ]
            }
        }

npm run grunt replace:dev

PLUGIN MIN HTML

npm install --save-dev grunt-contrib-htmlmin

grunt.loadNpmTasks('grunt-contrib-htmlmin');

,
        htmlmin: {
            dist: {
                options: {
                    removeComments: true,
                    collapseWhitespace: true
                },
                files: {
                    'prebuild/index.html': 'src/index.html'
                }
            }
        }

npm run grunt htmlmin:dist

,
            dist: {
                options: {
                   patterns: [
                        {
                            match: 'ENDERECO_DO_CSS',
                            replacement: './styles/main.min.css'
                        }
                   ] 
                },
                files: [
                    {
                        expand: true,
                        flatten: true,
                        src: ['prebuild/index.html'],
                        dest: 'dist/'
                    }
                ]
            }


grunt.registerTask('build', ['less:production', 'htmlmin:dist', 'replace:dist']);

npm run grunt build


PLUGIN CLEAN - EXCLUIR PASTA TEMPORARIA 

npm install --save-dev grunt-contrib-clean

grunt.loadNpmTasks('grunt-contrib-clean');

,
        clean: ['prebuild']

grunt.registerTask('build', ['less:production', 'htmlmin:dist', 'replace:dist', 'clean']);

npm run grunt build


CONFIGURANDO WATCH 

,
html: {
                files: ['src/index.html'],
                tasks: ['replace:dev']
            }

npm run grunt


PLUGIN (COMPRIMIR O JS)
npm install --save-dev grunt-contrib-uglify


grunt.loadNpmTasks('grunt-contrib-uglify');

,
        uglify: {
            target: {
                files: {
                    'dist/scripts/script.min.js': 'src/scripts/script.js'
                }
            }
        }

grunt.registerTask('build', ['less:production', 'htmlmin:dist', 'replace:dist', 'clean', 'uglify']);

dist: {
                options: {
                   patterns: [
                        {
                            match: 'ENDERECO_DO_CSS',
                            replacement: './styles/main.min.css'
                        },
                        {
                            match: 'ENDERECO_DO_JS',
                            replacement: './scripts/script.min.js'
                        }
                   ] 
                },


